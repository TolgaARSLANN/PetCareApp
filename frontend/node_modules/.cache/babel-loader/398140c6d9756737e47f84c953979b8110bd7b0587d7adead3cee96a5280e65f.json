{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\" // Backend'in base URL'si\n});\n\n// Her istekte token göndermek için interceptor\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem(\"token\"); // LocalStorage'dan token al\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  }\n  return req;\n}, error => {\n  console.error(\"Request error:\", error);\n  return Promise.reject(error);\n});\n\n// Yanıtların hata işleme mekanizması\nAPI.interceptors.response.use(response => {\n  return response; // Yanıt başarılıysa direkt döndür\n}, error => {\n  if (error.response) {\n    // Sunucudan dönen hata durumları\n    console.error(\"Response error:\", error.response.data.message || error.response.statusText);\n    if (error.response.status === 401) {\n      // Yetkilendirme hatası durumunda kullanıcıyı çıkışa zorla\n      localStorage.removeItem(\"token\");\n      window.location.href = \"/login\";\n    }\n  } else {\n    // Sunucudan yanıt alınamayan durumlar\n    console.error(\"Network error:\", error.message);\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization","error","console","Promise","reject","response","data","message","statusText","status","removeItem","window","location","href"],"sources":["C:/Users/tlgar/pet-care-frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Backend'in base URL'si\r\n});\r\n\r\n// Her istekte token göndermek için interceptor\r\nAPI.interceptors.request.use(\r\n  (req) => {\r\n    const token = localStorage.getItem(\"token\"); // LocalStorage'dan token al\r\n    if (token) {\r\n      req.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return req;\r\n  },\r\n  (error) => {\r\n    console.error(\"Request error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Yanıtların hata işleme mekanizması\r\nAPI.interceptors.response.use(\r\n  (response) => {\r\n    return response; // Yanıt başarılıysa direkt döndür\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      // Sunucudan dönen hata durumları\r\n      console.error(\"Response error:\", error.response.data.message || error.response.statusText);\r\n      if (error.response.status === 401) {\r\n        // Yetkilendirme hatası durumunda kullanıcıyı çıkışa zorla\r\n        localStorage.removeItem(\"token\");\r\n        window.location.href = \"/login\";\r\n      }\r\n    } else {\r\n      // Sunucudan yanıt alınamayan durumlar\r\n      console.error(\"Network error:\", error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default API;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,GAAG,IAAK;EACP,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAC/C;EACA,OAAOD,GAAG;AACZ,CAAC,EACAM,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACG,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZ,OAAOA,QAAQ,CAAC,CAAC;AACnB,CAAC,EACAJ,KAAK,IAAK;EACT,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClB;IACAH,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACI,QAAQ,CAACC,IAAI,CAACC,OAAO,IAAIN,KAAK,CAACI,QAAQ,CAACG,UAAU,CAAC;IAC1F,IAAIP,KAAK,CAACI,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACjC;MACAZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;EACF,CAAC,MAAM;IACL;IACAX,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACM,OAAO,CAAC;EAChD;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}