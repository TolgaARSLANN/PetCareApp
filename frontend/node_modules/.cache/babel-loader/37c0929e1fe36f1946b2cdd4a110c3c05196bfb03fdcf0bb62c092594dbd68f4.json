{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tlgar\\\\pet-care-frontend\\\\src\\\\components\\\\PetRecommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetRecommendations = ({\n  petId\n}) => {\n  _s();\n  const [recommendations, setRecommendations] = useState(null);\n  const [reminders, setReminders] = useState(null);\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      const {\n        data\n      } = await API.get(`/pets/${petId}/recommendations`);\n      setRecommendations(data);\n    };\n    const fetchReminders = async () => {\n      const {\n        data\n      } = await API.get(`/pets/${petId}/medication-reminders`);\n      setReminders(data);\n    };\n    fetchRecommendations();\n    fetchReminders();\n  }, [petId]);\n  if (!recommendations || !reminders) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Health Tips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recommendations.healthTips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tip\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Activity Tips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recommendations.activityTips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tip\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Medication Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reminders.map((reminder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [reminder.name, \" - Next dose: \", new Date(reminder.startDate).toLocaleDateString()]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PetRecommendations, \"bEzKGDWfQTtIBhvzDNb2OhS7rTs=\");\n_c = PetRecommendations;\nexport default PetRecommendations;\nvar _c;\n$RefreshReg$(_c, \"PetRecommendations\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","PetRecommendations","petId","_s","recommendations","setRecommendations","reminders","setReminders","fetchRecommendations","data","get","fetchReminders","children","fileName","_jsxFileName","lineNumber","columnNumber","healthTips","map","tip","index","activityTips","reminder","name","Date","startDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/tlgar/pet-care-frontend/src/components/PetRecommendations.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API from \"../services/api\";\r\n\r\nconst PetRecommendations = ({ petId }) => {\r\n  const [recommendations, setRecommendations] = useState(null);\r\n  const [reminders, setReminders] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecommendations = async () => {\r\n      const { data } = await API.get(`/pets/${petId}/recommendations`);\r\n      setRecommendations(data);\r\n    };\r\n\r\n    const fetchReminders = async () => {\r\n      const { data } = await API.get(`/pets/${petId}/medication-reminders`);\r\n      setReminders(data);\r\n    };\r\n\r\n    fetchRecommendations();\r\n    fetchReminders();\r\n  }, [petId]);\r\n\r\n  if (!recommendations || !reminders) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Health Tips</h3>\r\n      <ul>\r\n        {recommendations.healthTips.map((tip, index) => (\r\n          <li key={index}>{tip}</li>\r\n        ))}\r\n      </ul>\r\n      <h3>Activity Tips</h3>\r\n      <ul>\r\n        {recommendations.activityTips.map((tip, index) => (\r\n          <li key={index}>{tip}</li>\r\n        ))}\r\n      </ul>\r\n      <h3>Medication Reminders</h3>\r\n      <ul>\r\n        {reminders.map((reminder, index) => (\r\n          <li key={index}>\r\n            {reminder.name} - Next dose: {new Date(reminder.startDate).toLocaleDateString()}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetRecommendations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}